// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;
using TOIFeedServer.Database;
using TOIFeedServer.Models;

namespace TOIFeedServer.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("TOIFeedServer.Models.ContextModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(70);

                    b.HasKey("Id");

                    b.ToTable("Contexts");
                });

            modelBuilder.Entity("TOIFeedServer.Models.TagModel", b =>
                {
                    b.Property<Guid>("TagId")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<int>("Radius");

                    b.Property<int>("TagType");

                    b.HasKey("TagId");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("TOIFeedServer.Models.ToiContextModel", b =>
                {
                    b.Property<Guid>("ToiId");

                    b.Property<Guid>("ContextId");

                    b.HasKey("ToiId", "ContextId");

                    b.HasIndex("ContextId");

                    b.ToTable("ToiContextModel");
                });

            modelBuilder.Entity("TOIFeedServer.Models.ToiModel", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<string>("Image");

                    b.Property<string>("Title");

                    b.Property<string>("Url");

                    b.HasKey("Id");

                    b.ToTable("Tois");
                });

            modelBuilder.Entity("TOIFeedServer.Models.ToiTagModel", b =>
                {
                    b.Property<Guid>("ToiId");

                    b.Property<Guid>("TagId");

                    b.HasKey("ToiId", "TagId");

                    b.HasIndex("TagId");

                    b.ToTable("ToiTagModel");
                });

            modelBuilder.Entity("TOIFeedServer.Models.ToiContextModel", b =>
                {
                    b.HasOne("TOIFeedServer.Models.ContextModel", "Context")
                        .WithMany("Tois")
                        .HasForeignKey("ContextId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TOIFeedServer.Models.ToiModel", "Toi")
                        .WithMany("ContextModels")
                        .HasForeignKey("ToiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TOIFeedServer.Models.ToiTagModel", b =>
                {
                    b.HasOne("TOIFeedServer.Models.TagModel", "Tag")
                        .WithMany("Tois")
                        .HasForeignKey("TagId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("TOIFeedServer.Models.ToiModel", "Toi")
                        .WithMany("TagModels")
                        .HasForeignKey("ToiId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
